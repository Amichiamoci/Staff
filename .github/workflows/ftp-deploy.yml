on: 
    push:
       branches:
         - main
         - test
name: 🚀 FTP deploy on push
jobs:
    ftp-deploy:
        name: ⬆️👷 FTP deploy
        runs-on: ubuntu-latest
        steps:

        - name: 🚚 Get latest code
          uses: actions/checkout@v4
          with: 
            ref: ${{ github.head_ref }}
        
        - name: Setup PHP
          uses: shivammathur/setup-php@v2
          with:
              php-version: '8.3'
              tools: composer:v2
              coverage: none
          env:
              update: true
        
        - uses: actions/cache@v4
          id: cache
          with:
            path: ./vendor/
            key: ${{ runner.os }}-php-vendor-${{ hashFiles('./composer.json') }}
        
        - name: Install Dependencies
          if: steps.cache.outputs.cache-hit != 'true'
          uses: nick-invision/retry@v2
          with:
            timeout_minutes: 5
            max_attempts: 5
            command: composer update --no-interaction --no-progress
        
        - name: Load DB data in and website address in .env
          run: |
            echo -e "DB_HOST=\"${{ secrets.DB_ADDRESS }}\"" >> ".env"
            echo -e "DB_USER=\"${{ secrets.DB_USER }}\"" >> ".env"
            echo -e "DB_PASSWORD=\"${{ secrets.DB_PASSWORD }}\"" >> ".env"
            echo -e "DB_RESTART_SECRET=\"${{ secrets.DB_RESTART_SECRET }}\"" >> ".env"
            echo -e "WEBSITE_DOMAIN=\"www.${{ vars.DOMAIN }}\"" >> ".env"
        
        - name: Calculate Deploy Path
          id: deploy-path
          run: |
            if [$REF == 'main']
            then
                echo -e "path=\"admin/\"" >> "$GITHUB_ENV"
            else
                echo -e "path=\"admin_test/\"" >> "$GITHUB_ENV"
            fi
          env:
            REF: ${{ github.ref_name }}
        - name: Calculate Deploy Path
          id: deploy-path-echo
          run: echo "Path is ${{ steps.deploy-path.outputs.path }}"

        - name: Calculate emails to deploy
          id: deploy-email
          run: |
            if [$REF == 'main']
            then
                echo -e "dev_email=\"${{ secrets.DEV_EMAIL_BASE }}@${{ vars.DOMAIN }}\"" >> "$GITHUB_ENV"
                echo -e "info_email=\"${{ secrets.INFO_EMAIL_BASE }}@${{ vars.DOMAIN }}\"" >> "$GITHUB_ENV"
            else
                echo -e "dev_email=\"${{ secrets.DEV_EMAIL_BASE }}_${{ github.ref_name }}@${{ vars.DOMAIN }}\"" >> "$GITHUB_ENV"
                echo -e "info_email=\"${{ secrets.INFO_EMAIL_BASE }}_${{ github.ref_name }}@${{ vars.DOMAIN }}\"" >> "$GITHUB_ENV"
            fi
          env:
            REF: ${{ github.ref_name }}

        - name: Load Mail addresses in .env
          if: github.ref_name == 'main'
          run: |
            echo -e "EMAIL_SOURCE=\"${{ steps.deploy-email.outputs.dev_email }}\"" >> ".env"
            echo -e "CONTACT_EMAIL=\"${{ steps.deploy-email.outputs.info_email }}\"" >> ".env"

        - name: Calculate which database to connect
          id: deploy-db
          run: |
            if [$REF == 'main']
            then
                echo -e "deploy_db=\"${{ secrets.DB_MASTER_DATABASE }}/\"" >> "$GITHUB_ENV"
            else
                echo -e "deploy_db=\"${{ secrets.DB_TEST_DATABASE }}/\"" >> "$GITHUB_ENV"
            fi
          env:
            REF: ${{ github.ref_name }}
        
        - name: Load Database name in .env
          run: echo -e "DB_NAME=\"${{ steps.deploy-db.outputs.deploy_db }}\"" >> ".env"

        - name: 📂 Sync files
          uses: SamKirkland/FTP-Deploy-Action@v4.3.4
          with:
            server: ${{ secrets.FTP_ENDPOINT }}
            username: ${{ secrets.FTP_USER }}
            password: ${{ secrets.FTP_PASSWORD }}
            server-dir: ${{ secrets.FTP_FOLDER_BASE }}${{ steps.deploy-path.outputs.path }}
            log-level: minimal

        - name: Genereate MySQL Views and Procedures Reload File
          run: |
            curl -s --request POST \
                --header 'Content-Type: application/json' \
                --data '{ "RESTART_SECRET": "${{ secrets.DB_RESTART_SECRET }}" }' \
                --url http://www.${{ vars.DOMAIN }}/${{ steps.deploy-path.outputs.path }}